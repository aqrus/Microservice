// Code generated by protoc-gen-go. DO NOT EDIT.
// source: products/product_messages.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Memory_Unit int32

const (
	Memory_UNKNOW   Memory_Unit = 0
	Memory_BIT      Memory_Unit = 1
	Memory_BYTE     Memory_Unit = 2
	Memory_KILOBYTE Memory_Unit = 3
	Memory_MEGABYTE Memory_Unit = 4
	Memory_GIGABYTE Memory_Unit = 5
	Memory_TERABYTE Memory_Unit = 6
)

var Memory_Unit_name = map[int32]string{
	0: "UNKNOW",
	1: "BIT",
	2: "BYTE",
	3: "KILOBYTE",
	4: "MEGABYTE",
	5: "GIGABYTE",
	6: "TERABYTE",
}

var Memory_Unit_value = map[string]int32{
	"UNKNOW":   0,
	"BIT":      1,
	"BYTE":     2,
	"KILOBYTE": 3,
	"MEGABYTE": 4,
	"GIGABYTE": 5,
	"TERABYTE": 6,
}

func (x Memory_Unit) String() string {
	return proto.EnumName(Memory_Unit_name, int32(x))
}

func (Memory_Unit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{3, 0}
}

type Storage_Driver int32

const (
	Storage_UNKNOW Storage_Driver = 0
	Storage_HDD    Storage_Driver = 1
	Storage_SDD    Storage_Driver = 2
)

var Storage_Driver_name = map[int32]string{
	0: "UNKNOW",
	1: "HDD",
	2: "SDD",
}

var Storage_Driver_value = map[string]int32{
	"UNKNOW": 0,
	"HDD":    1,
	"SDD":    2,
}

func (x Storage_Driver) String() string {
	return proto.EnumName(Storage_Driver_name, int32(x))
}

func (Storage_Driver) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{4, 0}
}

type Keyboard_Layout int32

const (
	Keyboard_UNKNOW Keyboard_Layout = 0
	Keyboard_QWERTY Keyboard_Layout = 1
	Keyboard_QWERTZ Keyboard_Layout = 2
	Keyboard_AZERTY Keyboard_Layout = 3
)

var Keyboard_Layout_name = map[int32]string{
	0: "UNKNOW",
	1: "QWERTY",
	2: "QWERTZ",
	3: "AZERTY",
}

var Keyboard_Layout_value = map[string]int32{
	"UNKNOW": 0,
	"QWERTY": 1,
	"QWERTZ": 2,
	"AZERTY": 3,
}

func (x Keyboard_Layout) String() string {
	return proto.EnumName(Keyboard_Layout_name, int32(x))
}

func (Keyboard_Layout) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{5, 0}
}

type Screen_Panel int32

const (
	Screen_UNKNOW Screen_Panel = 0
	Screen_IPS    Screen_Panel = 1
	Screen_OLED   Screen_Panel = 2
)

var Screen_Panel_name = map[int32]string{
	0: "UNKNOW",
	1: "IPS",
	2: "OLED",
}

var Screen_Panel_value = map[string]int32{
	"UNKNOW": 0,
	"IPS":    1,
	"OLED":   2,
}

func (x Screen_Panel) String() string {
	return proto.EnumName(Screen_Panel_name, int32(x))
}

func (Screen_Panel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{6, 0}
}

type Product struct {
	Id       string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand    string     `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Name     string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Cpu      *CPU       `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Ram      *Memory    `protobuf:"bytes,5,opt,name=ram,proto3" json:"ram,omitempty"`
	Gpus     []*GPU     `protobuf:"bytes,6,rep,name=gpus,proto3" json:"gpus,omitempty"`
	Storage  []*Storage `protobuf:"bytes,7,rep,name=storage,proto3" json:"storage,omitempty"`
	Screen   *Screen    `protobuf:"bytes,8,opt,name=screen,proto3" json:"screen,omitempty"`
	Keyboard *Keyboard  `protobuf:"bytes,9,opt,name=Keyboard,proto3" json:"Keyboard,omitempty"`
	// Types that are valid to be assigned to Weight:
	//	*Product_WeightKg
	//	*Product_WeightLb
	Weight               isProduct_Weight     `protobuf_oneof:"weight"`
	PriceUsd             float64              `protobuf:"fixed64,12,opt,name=price_usd,json=priceUsd,proto3" json:"price_usd,omitempty"`
	RaseYear             uint32               `protobuf:"varint,13,opt,name=rase_year,json=raseYear,proto3" json:"rase_year,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetCpu() *CPU {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *Product) GetRam() *Memory {
	if m != nil {
		return m.Ram
	}
	return nil
}

func (m *Product) GetGpus() []*GPU {
	if m != nil {
		return m.Gpus
	}
	return nil
}

func (m *Product) GetStorage() []*Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *Product) GetScreen() *Screen {
	if m != nil {
		return m.Screen
	}
	return nil
}

func (m *Product) GetKeyboard() *Keyboard {
	if m != nil {
		return m.Keyboard
	}
	return nil
}

type isProduct_Weight interface {
	isProduct_Weight()
}

type Product_WeightKg struct {
	WeightKg float64 `protobuf:"fixed64,10,opt,name=weight_kg,json=weightKg,proto3,oneof"`
}

type Product_WeightLb struct {
	WeightLb float64 `protobuf:"fixed64,11,opt,name=weight_lb,json=weightLb,proto3,oneof"`
}

func (*Product_WeightKg) isProduct_Weight() {}

func (*Product_WeightLb) isProduct_Weight() {}

func (m *Product) GetWeight() isProduct_Weight {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *Product) GetWeightKg() float64 {
	if x, ok := m.GetWeight().(*Product_WeightKg); ok {
		return x.WeightKg
	}
	return 0
}

func (m *Product) GetWeightLb() float64 {
	if x, ok := m.GetWeight().(*Product_WeightLb); ok {
		return x.WeightLb
	}
	return 0
}

func (m *Product) GetPriceUsd() float64 {
	if m != nil {
		return m.PriceUsd
	}
	return 0
}

func (m *Product) GetRaseYear() uint32 {
	if m != nil {
		return m.RaseYear
	}
	return 0
}

func (m *Product) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Product) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Product_WeightKg)(nil),
		(*Product_WeightLb)(nil),
	}
}

type CPU struct {
	Brand                string   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NumberCores          uint32   `protobuf:"varint,3,opt,name=number_cores,json=numberCores,proto3" json:"number_cores,omitempty"`
	NumberThreads        uint32   `protobuf:"varint,4,opt,name=number_threads,json=numberThreads,proto3" json:"number_threads,omitempty"`
	MinGhz               float64  `protobuf:"fixed64,5,opt,name=min_ghz,json=minGhz,proto3" json:"min_ghz,omitempty"`
	MaxGhz               float64  `protobuf:"fixed64,6,opt,name=max_ghz,json=maxGhz,proto3" json:"max_ghz,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPU) Reset()         { *m = CPU{} }
func (m *CPU) String() string { return proto.CompactTextString(m) }
func (*CPU) ProtoMessage()    {}
func (*CPU) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{1}
}

func (m *CPU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPU.Unmarshal(m, b)
}
func (m *CPU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPU.Marshal(b, m, deterministic)
}
func (m *CPU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPU.Merge(m, src)
}
func (m *CPU) XXX_Size() int {
	return xxx_messageInfo_CPU.Size(m)
}
func (m *CPU) XXX_DiscardUnknown() {
	xxx_messageInfo_CPU.DiscardUnknown(m)
}

var xxx_messageInfo_CPU proto.InternalMessageInfo

func (m *CPU) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *CPU) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CPU) GetNumberCores() uint32 {
	if m != nil {
		return m.NumberCores
	}
	return 0
}

func (m *CPU) GetNumberThreads() uint32 {
	if m != nil {
		return m.NumberThreads
	}
	return 0
}

func (m *CPU) GetMinGhz() float64 {
	if m != nil {
		return m.MinGhz
	}
	return 0
}

func (m *CPU) GetMaxGhz() float64 {
	if m != nil {
		return m.MaxGhz
	}
	return 0
}

type GPU struct {
	Brand                string   `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MinGhz               float64  `protobuf:"fixed64,5,opt,name=min_ghz,json=minGhz,proto3" json:"min_ghz,omitempty"`
	MaxGhz               float64  `protobuf:"fixed64,6,opt,name=max_ghz,json=maxGhz,proto3" json:"max_ghz,omitempty"`
	Memory               *Memory  `protobuf:"bytes,7,opt,name=memory,proto3" json:"memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GPU) Reset()         { *m = GPU{} }
func (m *GPU) String() string { return proto.CompactTextString(m) }
func (*GPU) ProtoMessage()    {}
func (*GPU) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{2}
}

func (m *GPU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPU.Unmarshal(m, b)
}
func (m *GPU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPU.Marshal(b, m, deterministic)
}
func (m *GPU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPU.Merge(m, src)
}
func (m *GPU) XXX_Size() int {
	return xxx_messageInfo_GPU.Size(m)
}
func (m *GPU) XXX_DiscardUnknown() {
	xxx_messageInfo_GPU.DiscardUnknown(m)
}

var xxx_messageInfo_GPU proto.InternalMessageInfo

func (m *GPU) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *GPU) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GPU) GetMinGhz() float64 {
	if m != nil {
		return m.MinGhz
	}
	return 0
}

func (m *GPU) GetMaxGhz() float64 {
	if m != nil {
		return m.MaxGhz
	}
	return 0
}

func (m *GPU) GetMemory() *Memory {
	if m != nil {
		return m.Memory
	}
	return nil
}

type Memory struct {
	Value                uint32      `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Unit                 Memory_Unit `protobuf:"varint,2,opt,name=unit,proto3,enum=pb.Memory_Unit" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Memory) Reset()         { *m = Memory{} }
func (m *Memory) String() string { return proto.CompactTextString(m) }
func (*Memory) ProtoMessage()    {}
func (*Memory) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{3}
}

func (m *Memory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Memory.Unmarshal(m, b)
}
func (m *Memory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Memory.Marshal(b, m, deterministic)
}
func (m *Memory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Memory.Merge(m, src)
}
func (m *Memory) XXX_Size() int {
	return xxx_messageInfo_Memory.Size(m)
}
func (m *Memory) XXX_DiscardUnknown() {
	xxx_messageInfo_Memory.DiscardUnknown(m)
}

var xxx_messageInfo_Memory proto.InternalMessageInfo

func (m *Memory) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Memory) GetUnit() Memory_Unit {
	if m != nil {
		return m.Unit
	}
	return Memory_UNKNOW
}

type Storage struct {
	Driver               Storage_Driver `protobuf:"varint,1,opt,name=driver,proto3,enum=pb.Storage_Driver" json:"driver,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Storage) Reset()         { *m = Storage{} }
func (m *Storage) String() string { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()    {}
func (*Storage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{4}
}

func (m *Storage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storage.Unmarshal(m, b)
}
func (m *Storage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storage.Marshal(b, m, deterministic)
}
func (m *Storage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storage.Merge(m, src)
}
func (m *Storage) XXX_Size() int {
	return xxx_messageInfo_Storage.Size(m)
}
func (m *Storage) XXX_DiscardUnknown() {
	xxx_messageInfo_Storage.DiscardUnknown(m)
}

var xxx_messageInfo_Storage proto.InternalMessageInfo

func (m *Storage) GetDriver() Storage_Driver {
	if m != nil {
		return m.Driver
	}
	return Storage_UNKNOW
}

type Keyboard struct {
	Layout               Keyboard_Layout `protobuf:"varint,1,opt,name=layout,proto3,enum=pb.Keyboard_Layout" json:"layout,omitempty"`
	Backlit              bool            `protobuf:"varint,2,opt,name=backlit,proto3" json:"backlit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Keyboard) Reset()         { *m = Keyboard{} }
func (m *Keyboard) String() string { return proto.CompactTextString(m) }
func (*Keyboard) ProtoMessage()    {}
func (*Keyboard) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{5}
}

func (m *Keyboard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyboard.Unmarshal(m, b)
}
func (m *Keyboard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyboard.Marshal(b, m, deterministic)
}
func (m *Keyboard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyboard.Merge(m, src)
}
func (m *Keyboard) XXX_Size() int {
	return xxx_messageInfo_Keyboard.Size(m)
}
func (m *Keyboard) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyboard.DiscardUnknown(m)
}

var xxx_messageInfo_Keyboard proto.InternalMessageInfo

func (m *Keyboard) GetLayout() Keyboard_Layout {
	if m != nil {
		return m.Layout
	}
	return Keyboard_UNKNOW
}

func (m *Keyboard) GetBacklit() bool {
	if m != nil {
		return m.Backlit
	}
	return false
}

type Screen struct {
	SizeInch             float32            `protobuf:"fixed32,1,opt,name=size_inch,json=sizeInch,proto3" json:"size_inch,omitempty"`
	Esolution            *Screen_Resolution `protobuf:"bytes,2,opt,name=esolution,proto3" json:"esolution,omitempty"`
	Panel                Screen_Panel       `protobuf:"varint,3,opt,name=panel,proto3,enum=pb.Screen_Panel" json:"panel,omitempty"`
	Multitouch           bool               `protobuf:"varint,4,opt,name=multitouch,proto3" json:"multitouch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Screen) Reset()         { *m = Screen{} }
func (m *Screen) String() string { return proto.CompactTextString(m) }
func (*Screen) ProtoMessage()    {}
func (*Screen) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{6}
}

func (m *Screen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Screen.Unmarshal(m, b)
}
func (m *Screen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Screen.Marshal(b, m, deterministic)
}
func (m *Screen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Screen.Merge(m, src)
}
func (m *Screen) XXX_Size() int {
	return xxx_messageInfo_Screen.Size(m)
}
func (m *Screen) XXX_DiscardUnknown() {
	xxx_messageInfo_Screen.DiscardUnknown(m)
}

var xxx_messageInfo_Screen proto.InternalMessageInfo

func (m *Screen) GetSizeInch() float32 {
	if m != nil {
		return m.SizeInch
	}
	return 0
}

func (m *Screen) GetEsolution() *Screen_Resolution {
	if m != nil {
		return m.Esolution
	}
	return nil
}

func (m *Screen) GetPanel() Screen_Panel {
	if m != nil {
		return m.Panel
	}
	return Screen_UNKNOW
}

func (m *Screen) GetMultitouch() bool {
	if m != nil {
		return m.Multitouch
	}
	return false
}

type Screen_Resolution struct {
	Width                uint32   `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Screen_Resolution) Reset()         { *m = Screen_Resolution{} }
func (m *Screen_Resolution) String() string { return proto.CompactTextString(m) }
func (*Screen_Resolution) ProtoMessage()    {}
func (*Screen_Resolution) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c835c48252cfd2a, []int{6, 0}
}

func (m *Screen_Resolution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Screen_Resolution.Unmarshal(m, b)
}
func (m *Screen_Resolution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Screen_Resolution.Marshal(b, m, deterministic)
}
func (m *Screen_Resolution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Screen_Resolution.Merge(m, src)
}
func (m *Screen_Resolution) XXX_Size() int {
	return xxx_messageInfo_Screen_Resolution.Size(m)
}
func (m *Screen_Resolution) XXX_DiscardUnknown() {
	xxx_messageInfo_Screen_Resolution.DiscardUnknown(m)
}

var xxx_messageInfo_Screen_Resolution proto.InternalMessageInfo

func (m *Screen_Resolution) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Screen_Resolution) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.Memory_Unit", Memory_Unit_name, Memory_Unit_value)
	proto.RegisterEnum("pb.Storage_Driver", Storage_Driver_name, Storage_Driver_value)
	proto.RegisterEnum("pb.Keyboard_Layout", Keyboard_Layout_name, Keyboard_Layout_value)
	proto.RegisterEnum("pb.Screen_Panel", Screen_Panel_name, Screen_Panel_value)
	proto.RegisterType((*Product)(nil), "pb.Product")
	proto.RegisterType((*CPU)(nil), "pb.CPU")
	proto.RegisterType((*GPU)(nil), "pb.GPU")
	proto.RegisterType((*Memory)(nil), "pb.Memory")
	proto.RegisterType((*Storage)(nil), "pb.Storage")
	proto.RegisterType((*Keyboard)(nil), "pb.Keyboard")
	proto.RegisterType((*Screen)(nil), "pb.Screen")
	proto.RegisterType((*Screen_Resolution)(nil), "pb.Screen.Resolution")
}

func init() {
	proto.RegisterFile("products/product_messages.proto", fileDescriptor_2c835c48252cfd2a)
}

var fileDescriptor_2c835c48252cfd2a = []byte{
	// 842 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xc7, 0x43, 0x52, 0xa2, 0xa8, 0x91, 0xa5, 0x12, 0xdb, 0x2f, 0xd6, 0x69, 0x1b, 0x85, 0x41,
	0x0c, 0xa1, 0x45, 0x29, 0x40, 0xb9, 0xb4, 0xbd, 0xd9, 0x96, 0xa0, 0x08, 0xb6, 0x63, 0x75, 0x2d,
	0x21, 0xb0, 0x81, 0x40, 0x58, 0x92, 0x5b, 0x92, 0x88, 0xf8, 0xd1, 0xe5, 0xd2, 0x8e, 0x7c, 0x6f,
	0x2f, 0x7d, 0x8b, 0x5e, 0xfb, 0x28, 0x7d, 0xa9, 0x62, 0x77, 0x29, 0x4b, 0x49, 0x7b, 0xc9, 0x6d,
	0xfe, 0xbf, 0xff, 0xac, 0x66, 0xa0, 0x99, 0x21, 0x3c, 0x29, 0x58, 0x1e, 0x56, 0x01, 0x2f, 0x87,
	0x75, 0xb0, 0x4a, 0x69, 0x59, 0x92, 0x88, 0x96, 0x5e, 0xc1, 0x72, 0x9e, 0x23, 0xbd, 0xf0, 0x0f,
	0x9f, 0x44, 0x79, 0x1e, 0xad, 0xe9, 0x50, 0x12, 0xbf, 0xfa, 0x75, 0xc8, 0x93, 0x94, 0x96, 0x9c,
	0xa4, 0x85, 0x4a, 0x72, 0xff, 0x31, 0xa0, 0x35, 0x57, 0xef, 0x51, 0x0f, 0xf4, 0x24, 0x74, 0xb4,
	0xbe, 0x36, 0x68, 0x63, 0x3d, 0x09, 0xd1, 0x67, 0xd0, 0xf4, 0x19, 0xc9, 0x42, 0x47, 0x97, 0x48,
	0x09, 0x84, 0xa0, 0x91, 0x91, 0x94, 0x3a, 0x86, 0x84, 0x32, 0x46, 0x5f, 0x81, 0x11, 0x14, 0x95,
	0xd3, 0xe8, 0x6b, 0x83, 0xce, 0xa8, 0xe5, 0x15, 0xbe, 0x77, 0x3a, 0x5f, 0x62, 0xc1, 0xd0, 0xd7,
	0x60, 0x30, 0x92, 0x3a, 0x4d, 0x69, 0x81, 0xb0, 0x2e, 0x68, 0x9a, 0xb3, 0x0d, 0x16, 0x18, 0x3d,
	0x86, 0x46, 0x54, 0x54, 0xa5, 0x63, 0xf6, 0x8d, 0xed, 0xcb, 0xe9, 0x7c, 0x89, 0x25, 0x44, 0xcf,
	0xa1, 0x55, 0xf2, 0x9c, 0x91, 0x88, 0x3a, 0x2d, 0xe9, 0x77, 0x84, 0x7f, 0xa5, 0x10, 0xde, 0x7a,
	0xc8, 0x05, 0xb3, 0x0c, 0x18, 0xa5, 0x99, 0x63, 0xed, 0x8a, 0x5c, 0x49, 0x82, 0x6b, 0x07, 0x0d,
	0xc0, 0x3a, 0xa3, 0x1b, 0x3f, 0x27, 0x2c, 0x74, 0xda, 0x32, 0xeb, 0x40, 0x64, 0x6d, 0x19, 0x7e,
	0x70, 0xd1, 0x37, 0xd0, 0xbe, 0xa3, 0x49, 0x14, 0xf3, 0xd5, 0xdb, 0xc8, 0x81, 0xbe, 0x36, 0xd0,
	0x5e, 0x3e, 0xc2, 0x96, 0x42, 0x67, 0xd1, 0x9e, 0xbd, 0xf6, 0x9d, 0xce, 0xfb, 0xf6, 0xb9, 0x8f,
	0x1e, 0x43, 0xbb, 0x60, 0x49, 0x40, 0x57, 0x55, 0x19, 0x3a, 0x07, 0xc2, 0xc6, 0x96, 0x04, 0xcb,
	0x32, 0x14, 0x26, 0x23, 0x25, 0x5d, 0x6d, 0x28, 0x61, 0x4e, 0xb7, 0xaf, 0x0d, 0xba, 0xd8, 0x12,
	0xe0, 0x9a, 0x12, 0x86, 0x7e, 0x02, 0xa8, 0x8a, 0x90, 0x70, 0x1a, 0xae, 0x08, 0x77, 0x7a, 0xb2,
	0xc7, 0x43, 0x4f, 0x8d, 0xcf, 0xdb, 0x8e, 0xcf, 0x5b, 0x6c, 0xc7, 0x87, 0xdb, 0x75, 0xf6, 0x31,
	0x3f, 0xb1, 0xc0, 0x54, 0x0d, 0xb8, 0x7f, 0x6b, 0x60, 0x9c, 0xce, 0x97, 0xbb, 0xc9, 0x69, 0xff,
	0x37, 0x39, 0x7d, 0x6f, 0x72, 0x4f, 0xe1, 0x20, 0xab, 0x52, 0x9f, 0xb2, 0x55, 0x90, 0x33, 0x5a,
	0xca, 0xa9, 0x76, 0x71, 0x47, 0xb1, 0x53, 0x81, 0xd0, 0x73, 0xe8, 0xd5, 0x29, 0x3c, 0x66, 0x94,
	0x84, 0xa5, 0x9c, 0x73, 0x17, 0x77, 0x15, 0x5d, 0x28, 0x88, 0xbe, 0x84, 0x56, 0x9a, 0x64, 0xab,
	0x28, 0xbe, 0x97, 0xc3, 0xd6, 0xb0, 0x99, 0x26, 0xd9, 0x34, 0xbe, 0x97, 0x06, 0x79, 0x27, 0x0d,
	0xb3, 0x36, 0xc8, 0xbb, 0x69, 0x7c, 0xef, 0xfe, 0xae, 0x81, 0x31, 0xfd, 0xa8, 0x6e, 0x3f, 0xba,
	0x86, 0x58, 0x8e, 0x54, 0xee, 0x9b, 0xd3, 0xfa, 0xcf, 0x06, 0xd6, 0x8e, 0xfb, 0x97, 0x06, 0xa6,
	0x42, 0xa2, 0x95, 0x5b, 0xb2, 0xae, 0xa8, 0x6c, 0xa5, 0x8b, 0x95, 0x40, 0xcf, 0xa0, 0x51, 0x65,
	0x09, 0x97, 0xad, 0xf4, 0x46, 0x9f, 0xec, 0x7e, 0xc2, 0x5b, 0x66, 0x09, 0xc7, 0xd2, 0x74, 0xdf,
	0x40, 0x43, 0x28, 0x04, 0x60, 0x2e, 0x5f, 0x9d, 0xbd, 0xba, 0x7c, 0x6d, 0x3f, 0x42, 0x2d, 0x30,
	0x4e, 0x66, 0x0b, 0x5b, 0x43, 0x16, 0x34, 0x4e, 0xae, 0x17, 0x13, 0x5b, 0x47, 0x07, 0x60, 0x9d,
	0xcd, 0xce, 0x2f, 0xa5, 0x32, 0x84, 0xba, 0x98, 0x4c, 0x8f, 0xa5, 0x6a, 0x08, 0x35, 0x9d, 0xd5,
	0xaa, 0x29, 0xd4, 0x62, 0x82, 0x95, 0x32, 0xdd, 0x37, 0xd0, 0xaa, 0x37, 0x1f, 0x7d, 0x07, 0x66,
	0xc8, 0x92, 0x5b, 0xca, 0x64, 0x97, 0xbd, 0x11, 0xda, 0x3b, 0x0b, 0x6f, 0x2c, 0x1d, 0x5c, 0x67,
	0xb8, 0x47, 0x60, 0x2a, 0xf2, 0x61, 0x5f, 0x2f, 0xc7, 0x63, 0x5b, 0x13, 0xc1, 0xd5, 0x78, 0x6c,
	0xeb, 0xee, 0x9f, 0xda, 0xee, 0x42, 0xd0, 0xf7, 0x60, 0xae, 0xc9, 0x26, 0xaf, 0x78, 0x5d, 0xe0,
	0xd3, 0xfd, 0x5b, 0xf1, 0xce, 0xa5, 0x85, 0xeb, 0x14, 0xe4, 0x40, 0xcb, 0x27, 0xc1, 0xdb, 0x75,
	0xfd, 0xff, 0x58, 0x78, 0x2b, 0xdd, 0x1f, 0xc1, 0x54, 0xb9, 0xef, 0xd5, 0x06, 0x30, 0x7f, 0x79,
	0x3d, 0xc1, 0x8b, 0x6b, 0x5b, 0x7b, 0x88, 0x6f, 0x6c, 0x5d, 0xc4, 0xc7, 0x37, 0x92, 0x1b, 0xee,
	0x1f, 0x3a, 0x98, 0xea, 0x82, 0xc5, 0xd1, 0x94, 0xc9, 0x3d, 0x5d, 0x25, 0x59, 0x10, 0xcb, 0x76,
	0x74, 0x6c, 0x09, 0x30, 0xcb, 0x82, 0x18, 0xbd, 0x80, 0x36, 0x2d, 0xf3, 0x75, 0xc5, 0x93, 0x3c,
	0x93, 0xd5, 0x3b, 0xa3, 0xcf, 0x77, 0xd7, 0xef, 0xe1, 0x07, 0x13, 0xef, 0xf2, 0xd0, 0x11, 0x34,
	0x0b, 0x92, 0xd1, 0xb5, 0xdc, 0xf5, 0xde, 0xc8, 0xde, 0x7b, 0x30, 0x17, 0x1c, 0x2b, 0x1b, 0x7d,
	0x0b, 0x90, 0x56, 0x6b, 0x9e, 0xf0, 0xbc, 0x0a, 0x62, 0xb9, 0xf3, 0x16, 0xde, 0x23, 0x87, 0x3f,
	0x03, 0xec, 0x0a, 0x88, 0xcd, 0xb9, 0x4b, 0x42, 0x1e, 0x6f, 0x37, 0x47, 0x0a, 0xf4, 0x05, 0x98,
	0xb1, 0x3c, 0x4d, 0xd9, 0x5d, 0x17, 0xd7, 0xca, 0x3d, 0x82, 0xa6, 0xac, 0xf5, 0xe1, 0x54, 0x66,
	0xf3, 0x2b, 0xb5, 0x2d, 0x97, 0xe7, 0x93, 0xb1, 0xad, 0x9f, 0x3c, 0xbb, 0x79, 0x4a, 0x7e, 0x63,
	0x55, 0x39, 0xbc, 0x48, 0x02, 0x96, 0x97, 0x94, 0xdd, 0x26, 0x01, 0x1d, 0x46, 0x84, 0xd3, 0x3b,
	0xb2, 0xf9, 0x81, 0x14, 0xc9, 0xb0, 0xf0, 0x7d, 0x53, 0x7e, 0x1e, 0x5e, 0xfc, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x6d, 0x00, 0x27, 0x52, 0x12, 0x06, 0x00, 0x00,
}
